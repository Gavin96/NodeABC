
NPM 的使用
NPM 是随同 NodeJS 一起安装的包管理工具，能解决 NodeJS 代码部署上的很多问题，常见的使用场景有以下几种：
   允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。 
   允许用户从 NPM 服务器下载并安装别人编写的命令行程序到本地使用。 
   允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。
      
npm 安装Node.js模块语法如下：
   npm install <Module Name>  such as:  npm install express
   npm 的包安装分为两种[本地 local 安装、全局 global 安装]，分别为：
	npm install express
	npm install express -g
   一般是选择本地安装，即将模块安装到开发目录中,模块安装后会被包含在工程目录下的node_modules目录下，
   也就是将安装包放在 ./node_modules下,如果没有 node_modules 目录,会在当前执行 npm 命令的目录下生成 node_modules 目录。 
   使用时,可以通过 require() 来引入本地安装的包:  var express (习惯定义变量名和模块名相同) = require('express');

 PS：1.全局安装的时候会将安装包安装在 /usr/local目录下或者电脑的 node 的安装目录下,可以在命令行中直接使用
     2.安装过程输出如下内容，第一行输出了模块的版本号及安装位置
       express@4.13.3 node_modules/express
     3.可以使用 npm ls -g 命令来查看所有全局安装的模块

使用 package.json 文件
	package.json 文件位于模块的目录下，用于定义包的属性
	Package,json 属性说明：
	   name - 包名
	   version - 包的版本号
	   description - 包的描述
	   homepage - 包的官网url
	   author - 包的作者姓名
	   contributors - 包的其他贡献者姓名
	   dependencies - 依赖包列表/若依赖包没有安装, npm会自动将其安装在 node_module 目录下
	   repository - 包代码存放的地方的类型, 可以是git或者svn, git可在Github上
	   main - main字段后面是一个模块ID, 它是一个指向你程序的主要项目. 就是说, 如果你的包名字叫 express , 然后用户安装它, 然后require("express")
	   keywords - 关键字

npm 卸载模块: npm uninstall express   然后你可以 npm ls 查看确认是否成功卸载


NPM 常用命令 (可在其官网查看)
npm help 查看所有命令
npm help install  查看install命令的详细帮助
在 package.json 所在目录下使用 npm install . -g可在本地安装当前命令行程序, 可用于发布前的本地测试
npm update <package> （-g） 可以在本地(全局)将指定模块更新至最新版本
npm cache clear 可以清空NPM本地缓存, 用于对付使用相同版本号发布新版本代码的人
npm unpublish <package>@<version>可以撤销曾发布过的某个版本代码

使用淘宝 NPM 镜像